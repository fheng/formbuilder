(function(){rivets.binders.input={publishes:!0,routine:rivets.binders.value.routine,bind:function(a){return a.addEventListener("input",this.publish)},unbind:function(a){return a.removeEventListener("input",this.publish)}},rivets.configure({prefix:"rv",adapter:{subscribe:function(a,b,c){return c.wrapped=function(a,b){return c(b)},a.on("change:"+b,c.wrapped)},unsubscribe:function(a,b,c){return a.off("change:"+b,c.wrapped)},read:function(a,b){return"cid"===b?a.cid:a.get(b)},publish:function(a,b,c){return a.cid?a.set(b,c):a[b]=c}}}),rivets.formatters.number={read:function(a){return a&&""!==a?parseInt(a):void 0},publish:function(a){return a&&""!==a?parseInt(a):void 0}}}).call(this),function(){var a;a=function(){function a(b,c){null==c&&(c={}),_.extend(this,Backbone.Events),this.mainView=new a.views.main(_.extend({selector:b},c,{formBuilder:this})),this.collection=this.mainView.collection}return a.helpers={defaultFieldAttrs:function(b){var c,d;return a.options.mappings.TYPE_ALIASES&&a.options.mappings.TYPE_ALIASES[b]&&(b=a.options.mappings.TYPE_ALIASES[b]),c={},c[a.options.mappings.FIELD_OPTIONS]={},c[a.options.mappings.REQUIRED]=!0,c[a.options.mappings.REPEATING]=!1,c[a.options.mappings.FIELD_TYPE]=b,c[a.options.mappings.LABEL]="Untitled",c[a.options.mappings.VALIDATE_IMMEDIATELY]=!0,c[a.options.mappings.ADMIN_ONLY]=!1,c[a.options.mappings.FIELD_CODE]=null,("function"==typeof(d=a.fields[b]).defaultAttributes?d.defaultAttributes(c):void 0)||c},simple_format:function(a){return null!=a?a.replace(/\n/g,"<br />"):void 0}},a.options={BUTTON_CLASS:"fb-button",HTTP_ENDPOINT:"",HTTP_METHOD:"POST",mappings:{SIZE:"field_options.size",UNITS:"field_options.units",LABEL:"label",VALUE:"value",HASH:"hash",FIELD_TYPE:"field_type",REQUIRED:"required",REPEATING:"repeating",VALIDATE_IMMEDIATELY:"validate_immediately",ADMIN_ONLY:"adminOnly",FIELD_CODE:"fieldCode",FIELD_OPTIONS:"field_options",OPTIONS:"field_options.options",DESCRIPTION:"field_options.description",DESCRIPTION_PLACEHOLDER:"Add a longer description to this field",DESCRIPTION_TITLE:"Description",INCLUDE_OTHER:"field_options.include_other_option",INCLUDE_BLANK:"field_options.include_blank_option",DATASOURCE:"dataSource",DATASOURCE_TYPE:"dataSourceType",DATASOURCE_TYPE_DATASOURCE:"dataSource",DATASOURCE_TYPE_STATIC:"static",INTEGER_ONLY:"field_options.integer_only",LOCATION_UNIT:"field_options.location_unit",DATETIME_UNIT:"field_options.datetime_unit",DATETIME_FORMAT:"field_options.definition.dateTimeFormat",MIN:"field_options.min",MAX:"field_options.max",STEP_SIZE:"field_options.stepSize",MINLENGTH:"field_options.minlength",MAXLENGTH:"field_options.maxlength",MINREPITIONS:"field_options.minRepeat",MAXREPITIONS:"field_options.maxRepeat",LENGTH_UNITS:"field_options.min_max_length_units",FILE_SIZE:"field_options.file_size",FIELD_FORMAT_MODE:"field_options.field_format_mode",FIELD_FORMAT_STRING:"field_options.field_format_string",PHOTO_HEIGHT:"field_options.photo_height",PHOTO_WIDTH:"field_options.photo_width",PHOTO_QUALITY:"field_options.photo_quality",SINGLE_CHECKED:"field_options.checked",TIME_AUTOPOPULATE:"field_options.time_autopopulate",VALUE_HEADER:"Value",TYPE_ALIASES:!1,FIELD_ERROR:"field_error"},unAliasType:function(b){var c;return a.options.mappings.TYPE_ALIASES&&(c=_.values(a.options.mappings.TYPE_ALIASES).indexOf(b),c>-1&&(b=_.keys(a.options.mappings.TYPE_ALIASES)[c])),b},dict:{ALL_CHANGES_SAVED:"All changes saved",SAVE_FORM:"Save form",UNSAVED_CHANGES:"You have unsaved changes. If you leave this page, you will lose those changes!"}},a.fields={},a.inputFields={},a.nonInputFields={},a.fieldRuleConfirmationFunction=function(a,b){return"function"==typeof b?b(!0):void 0},a.model=Backbone.DeepModel.extend({sync:function(){},indexInDOM:function(){var a;return a=$(".fb-field-wrapper").filter(function(a){return function(b,c){return $(c).data("cid")===a.cid}}(this)),$(".fb-field-wrapper").index(a)},is_input:function(){var b;return b=this.get(a.options.mappings.FIELD_TYPE),b=a.options.unAliasType(b),null!=a.inputFields[b]}}),a.collection=Backbone.Collection.extend({initialize:function(){return this.on("add",this.copyCidToModel)},model:a.model,comparator:function(a){return a.indexInDOM()},copyCidToModel:function(a){return a.attributes.cid=a.cid}}),a.registerField=function(b,c){var d,e,f,g;for(f=["view","edit"],d=0,e=f.length;e>d;d++)g=f[d],c[g]=_.template(c[g]);return a.fields[b]=c,"non_input"===c.type?a.nonInputFields[b]=c:a.inputFields[b]=c},a.registerFieldRuleConfirmation=function(b){return a.fieldRuleConfirmationFunction=b},a.views={view_field:Backbone.View.extend({className:"fb-field-wrapper",events:{"click .subtemplate-wrapper":"focusEditView","click .js-duplicate":"duplicate","click .js-clear":"clear","keyup input":"forceEditRender","keyup textarea":"forceEditRender","change input[type=file]":"forceEditRender"},initialize:function(){return this.parentView=this.options.parentView,this.listenTo(this.model,"change",this.render),this.listenTo(this.model,"destroy",this.remove)},render:function(){var b,c;return this.editing?void delete this.editing:(c=this.parentView.options.hasOwnProperty("editStructure")?this.parentView.options.editStructure:!0,b=this.model.get(a.options.mappings.FIELD_TYPE),this.model.get(a.options.mappings.ADMIN_ONLY)?(a.fieldRuleConfirmationFunction(this.model,"adminChange","Admin Only fields cannot be the subject of rules. Changing this field to Admin Only will remove any references of this field from page/field rules. Do you wish to keep the updated rules?"),this.$el.addClass("admin-field")):this.$el.removeClass("admin-field"),a.options.mappings.TYPE_ALISES&&(b=a.options.mappings.TYPE_ALISES[b]),this.$el.addClass("response-field-"+b).data("cid",this.model.cid).html(a.templates["view/base"+(this.model.is_input()?"":"_non_input")]({editStructure:c,rf:this.model})),this)},focusEditView:function(a){return this.parentView.createAndShowEditView(this.model)},forceEditRender:function(b){var c;c=b.target.value,this.editing=!0,this.model.set(a.options.mappings.VALUE,c)},clear:function(){return this.parentView.handleFormUpdate(),a.fieldRuleConfirmationFunction(this.model,"deleteChange","Deleting this field will remove any references of this field from page/field rules. Do you wish to keep the updated rules?",function(a){return function(b){return a.model.destroy()}}(this))},duplicate:function(){var b;return b=_.clone(this.model.attributes),delete b.id,b[a.options.mappings.LABEL]+=" Copy",this.parentView.createField(b,{position:this.model.indexInDOM()+1})}}),edit_field:Backbone.View.extend({className:"edit-response-field",events:{"click .js-add-option":"addOption","click .js-remove-option":"removeOption","click .js-default-updated":"defaultUpdated","input .option-label-input":"forceRender","change .fb-repeating input[type=checkbox]":"toggleRepititionsInputs","change .fieldFormatMode":"changeFieldFormatHelpText","change .fb-required input[type=checkbox]":"requiredChanged","change .includeDataSource input[type=checkbox]":"toggleDSView","change .ds-select":"onDSSelect","change .datetype":"toggleDateFormat"},initialize:function(){return this.listenTo(this.model,"destroy",this.remove),this.parentView=this.options.parentView},render:function(){var b,c,d,e;return e=this.parentView.options.hasOwnProperty("commonCheckboxes")?this.parentView.options.commonCheckboxes:!0,c=!1,d=this.model.get(a.options.mappings.FIELD_TYPE),d=a.options.unAliasType(d),a.inputFields[d]&&a.inputFields[d].repeatable&&a.inputFields[d].repeatable===!0&&(c=!0),this.$el.html(a.templates["edit/base"+(this.model.is_input()?"":"_non_input")]({rf:this.model,editStructure:this.parentView.options.editStructure,commonCheckboxes:e,repeatable:c,repeating:this.model.get(a.options.mappings.REPEATING)})),b=this.$el.find(".ds-dd select"),b&&b.html(a.templates["partials/ds_options"]({datasources:this.parentView.options.datasources,datasource:this.model.get(a.options.mappings.DATASOURCE)})),rivets.bind(this.$el,{model:this.model}),this.toggleDateFormat(),this},remove:function(){return this.options.parentView.editView=void 0,this.options.parentView.$el.find('[href="#addField"]').click(),Backbone.View.prototype.remove.call(this)},addOption:function(b){var c,d,e,f;return c=$(b.currentTarget),d=this.$el.find(".option").index(c.closest(".option")),f=this.model.get(a.options.mappings.OPTIONS)||[],e={checked:!1},e[a.options.mappings.LABEL]="",d>-1?f.splice(d+1,0,e):f.push(e),this.model.set(a.options.mappings.OPTIONS,f),this.model.trigger("change:"+a.options.mappings.OPTIONS),this.forceRender()},removeOption:function(b){var c,d,e;return c=$(b.currentTarget),d=this.$el.find(".js-remove-option").index(c),e=this.model.get(a.options.mappings.OPTIONS),e.splice(d,1),this.model.set(a.options.mappings.OPTIONS,e),this.model.trigger("change:"+a.options.mappings.OPTIONS),this.forceRender()},defaultUpdated:function(b){var c,d;return d=$(b.currentTarget),c="checkboxes",a.options.mappings.TYPE_ALIASES&&a.options.mappings.TYPE_ALIASES.checkboxes&&(c=a.options.mappings.TYPE_ALIASES.checkboxes),this.model.get(a.options.mappings.FIELD_TYPE)!==c&&this.$el.find(".js-default-updated").not(d).attr("checked",!1).trigger("change"),this.forceRender()},forceRender:function(){return this.model.trigger("change",this.model)},toggleDSView:function(b){var c,d,e,f;return d=$(b.target),f=this.$el.find(".ds-dd select"),e=this.$el.find(".option-wrapper"),c=this.$el.find(".datasource-data-view"),d.prop("checked")===!0?(f.prop("disabled",!1),this.model.set(a.options.mappings.DATASOURCE_TYPE,a.options.mappings.DATASOURCE_TYPE_DATASOURCE),e.addClass("hidden"),c.removeClass("hidden")):(f.prop("disabled",!0),this.model.set(a.options.mappings.DATASOURCE_TYPE,a.options.mappings.DATASOURCE_TYPE_STATIC),e.removeClass("hidden"),c.addClass("hidden"))},onDSSelect:function(b){var c,d;return d=$(b.target),c=d.val(),"prompt"!==c?(this.model.set(a.options.mappings.DATASOURCE,c),this.model.set(a.options.mappings.DATASOURCE_TYPE,a.options.mappings.DATASOURCE_TYPE_DATASOURCE)):void 0},toggleRepititionsInputs:function(b){var c,d,e;return c=$(b.target),c.prop("checked")===!0?(this.$el.find(".fb-repititions input").prop("disabled",!1),e=this.$el.find(".fb-repititions input.minReps"),d=this.$el.find(".fb-repititions input.maxReps"),""===e.val()&&this.model.set(a.options.mappings.MINREPITIONS,1),""===d.val()&&this.model.set(a.options.mappings.MAXREPITIONS,5),this.model.set(a.options.mappings.REQUIRED,!0)):this.$el.find(".fb-repititions input").prop("disabled",!0)},changeFieldFormatHelpText:function(a){var b;return b=$(a.target).val(),"regex"===b?(this.$el.find(".simpleFormat").hide(),this.$el.find(".advancedFormat").show()):(this.$el.find(".simpleFormat").show(),this.$el.find(".advancedFormat").hide())},requiredChanged:function(b){var c,d;return d=$(b.target),c="checkboxes",a.options.mappings.TYPE_ALIASES&&a.options.mappings.TYPE_ALIASES[c]&&(c=a.options.mappings.TYPE_ALIASES.checkboxes),this.model.get(a.options.mappings.FIELD_TYPE)===c?(this.render(),d.prop("checked")===!1?(this.model.unset(a.options.mappings.MIN),this.model.unset(a.options.mappings.MAX)):this.model.set(a.options.mappings.MIN,1)):void 0},toggleDateFormat:function(b){var c;return c=this.$el.find(".dateformat"),c.each("datetime"!==this.model.get(a.options.mappings.DATETIME_UNIT)?function(){return $(this).hide()}:function(){return $(this).show()})}}),main:Backbone.View.extend({SUBVIEWS:[],events:{"click .js-save-form":"saveForm","click .fb-add-field-types a":"addField","blur input.minReps":"checkReps","blur input.maxReps":"checkReps"},initialize:function(){return this.options.eventFix||(this.events["click .fb-tabs a"]="showTab"),this.$el=$(this.options.selector),this.formBuilder=this.options.formBuilder,this.collection=new a.collection,this.collection.bind("add",this.addOne,this),this.collection.bind("reset",this.reset,this),this.collection.bind("change",this.handleFormUpdate,this),this.collection.bind("destroy add reset",this.hideShowNoResponseFields,this),this.collection.bind("destroy",this.ensureEditViewScrolled,this),this.render(),this.collection.reset(this.options.bootstrapData),this.initAutosave()},initAutosave:function(){return this.formSaved=!0,this.saveFormButton=this.$el.find(".js-save-form"),this.saveFormButton.attr("disabled",!0).text(a.options.dict.ALL_CHANGES_SAVED),setInterval(function(a){return function(){return a.saveForm.call(a)}}(this),5e3),$(window).bind("beforeunload",function(b){return function(){return b.formSaved?void 0:a.options.dict.UNSAVED_CHANGES}}(this))},reset:function(){return this.$responseFields.html(""),this.addAll()},render:function(){var b,c,d,e,f,g,h,i,j,k,l,m,n,o;if(this.options.editStructure=this.options.hasOwnProperty("editStructure")?this.options.editStructure:!0,this.options.addAt=this.options.hasOwnProperty("addAt")?this.options.addAt:"last",a.options.mappings.TYPE_ALIASES){l=a.options.mappings.TYPE_ALIASES;for(k in l)d=l[k],a.fields[d]=a.fields[k]}if(b={},c={},this.options.hasOwnProperty("fields"))for(m=this.options.fields,g=0,i=m.length;i>g;g++){if(f=m[g],e=a.inputFields[f]||a.nonInputFields[f],!e)throw new Error("No field found with name"+f);"non_input"===e.type?c[f]=e:b[f]=e}else b=a.inputFields,c=a.nonInputFields;for(this.$el.html(a.templates.page({editStructure:this.options.editStructure,fieldsEnabled:b,fieldsEnabledNonInput:c})),this.$fbLeft=this.$el.find(".fb-left")||this.$el.find(".span6.middle"),this.$fbRight=this.$el.find(".fb-right")||this.$el.find(".span4.right"),this.$responseFields=this.$el.find(".fb-response-fields"),this.bindWindowScrollEvent(),this.hideShowNoResponseFields(),n=this.SUBVIEWS,h=0,j=n.length;j>h;h++)o=n[h],new o({parentView:this}).render();return this.options.eventFix&&this.$el.find(".fb-tabs a").unbind().click(this.showTab),this},bindWindowScrollEvent:function(){return $(window).on("scroll",function(a){return function(){var b,c;if(a.$fbLeft.data("locked")!==!0)return c=Math.max(0,$(window).scrollTop()),b=a.$responseFields.height(),a.$fbLeft.css({"margin-top":Math.min(b,c)})}}(this))},showTab:function(a){var b,c,d;return b=$(a.currentTarget),d=b.data("target"),b.closest("li").addClass("active").siblings("li").removeClass("active"),this.$el.find(d).addClass("active").siblings(".fb-tab-pane").removeClass("active"),"#editField"!==d&&this.unlockLeftWrapper(),"#editField"===d&&!this.editView&&(c=this.collection.models[0])?this.createAndShowEditView(c):void 0},addOne:function(b,c,d){var e,f;return f=new a.views.view_field({model:b,parentView:this}),null!=d.$replaceEl?d.$replaceEl.replaceWith(f.render().el):null==d.position||-1===d.position?this.$responseFields.append(f.render().el):0===d.position?this.$responseFields.prepend(f.render().el):(e=this.$responseFields.find(".fb-field-wrapper").eq(d.position))[0]?e.before(f.render().el):this.$responseFields.append(f.render().el)},setSortable:function(){return this.$responseFields.hasClass("ui-sortable")&&this.$responseFields.sortable("destroy"),this.$responseFields.sortable({forcePlaceholderSize:!0,placeholder:"sortable-placeholder",cancel:".fb-field-wrapper.response-field-page_break",stop:function(b){return function(c,d){var e;return d.item.data("field-type")&&(e=b.collection.create(a.helpers.defaultFieldAttrs(d.item.data("field-type")),{$replaceEl:d.item}),b.createAndShowEditView(e)),d.item.is("div:first-of-type")&&b.$responseFields.sortable("cancel"),b.handleFormUpdate(),b.trigger("reorder"),!0}}(this),update:function(a){return function(b,c){return c.item.data("field-type")?void 0:a.ensureEditViewScrolled()}}(this)}),this.setDraggable()},setDraggable:function(){var a;return a=this.$el.find("[data-field-type]"),a.draggable({connectToSortable:this.$responseFields,start:function(a){return function(){return a.$responseFields.sortable("refresh")}}(this),helper:function(a){return function(){var b;return b=$("<div class='response-field-draggable-helper' />"),b.css({width:a.$responseFields.width(),height:"80px"}),b}}(this)})},addAll:function(){return this.collection.each(this.addOne,this),this.options.editStructure!==!1?this.setSortable():void 0},hideShowNoResponseFields:function(){return this.$el.find(".fb-no-response-fields")[this.collection.length>0?"hide":"show"]()},addField:function(b){var c;return c=$(b.currentTarget).data("field-type"),this.createField(a.helpers.defaultFieldAttrs(c))},createField:function(a,b){var c;return b=b||{},b.at="last"===this.options.addAt?this.collection.length:0,c=this.collection.create(a,b),this.createAndShowEditView(c),this.handleFormUpdate()},createAndShowEditView:function(b){var c,d,e;if(d=this.$el.find(".fb-field-wrapper").filter(function(){return $(this).data("cid")===b.cid}),d.addClass("editing").siblings(".fb-field-wrapper").removeClass("editing"),this.editView){if(this.editView.model.cid===b.cid)return this.$el.find('.fb-tabs a[data-target="#editField"]').click(),void this.scrollLeftWrapper(d,"undefined"!=typeof e&&null!==e&&e);e=this.$fbLeft.css("padding-top"),this.editView.remove()}return this.editView=new a.views.edit_field({model:b,parentView:this}),c=this.editView.render().$el,this.$el.find(".fb-edit-field-wrapper").html(c),this.options.noEditOnDrop||this.$el.find('.fb-tabs a[data-target="#editField"]').click(),this.scrollLeftWrapper(d),this},checkReps:function(a){var b,c,d,e,f,g,h;return h=$(a.target),b=h.hasClass("maxReps")===!0?"max":"min",g=h.parent(),c=h.parent().find("input.maxReps"),e=h.parent().find("input.minReps"),f=Number(e.val()),d=Number(c.val()),"min"===b?(f&&0>f||f>d?e.addClass("error"):e.removeClass("error"),e.val(parseInt(f))):(d&&0>d||f>d?c.addClass("error"):c.removeClass("error"),c.val(parseInt(d)))},ensureEditViewScrolled:function(){return this.editView?this.scrollLeftWrapper($(".fb-field-wrapper.editing")):void 0},scrollLeftWrapper:function(a){return this.options.noScroll?void 0:(this.unlockLeftWrapper(),$.scrollWindowTo(a.offset().top-this.$responseFields.offset().top,200,function(a){return function(){return a.lockLeftWrapper()}}(this)))},lockLeftWrapper:function(){return this.$fbLeft.data("locked",!0)},unlockLeftWrapper:function(){return this.$fbLeft.data("locked",!1)},handleFormUpdate:function(){return this.updatingBatch?void 0:(this.formSaved=!1,this.saveFormButton.removeAttr("disabled").text(a.options.dict.SAVE_FORM))},saveForm:function(b){var c;if(!this.formSaved)return this.formSaved=!0,this.saveFormButton.attr("disabled",!0).text(a.options.dict.ALL_CHANGES_SAVED),this.collection.sort(),c=JSON.stringify({fields:this.collection.toJSON()}),a.options.HTTP_ENDPOINT&&this.doAjaxSave(c),this.formBuilder.trigger("save",c)},doAjaxSave:function(b){return $.ajax({url:a.options.HTTP_ENDPOINT,type:a.options.HTTP_METHOD,data:b,contentType:"application/json",success:function(a){return function(b){var c,d,e,f;for(a.updatingBatch=!0,d=0,e=b.length;e>d;d++)c=b[d],null!=(f=a.collection.get(c.cid))&&f.set({id:c.id}),a.collection.trigger("sync");return a.updatingBatch=void 0}}(this)})}})},a}(),window.Formbuilder=a,"undefined"!=typeof module&&null!==module?module.exports=a:window.Formbuilder=a}.call(this),function(){Formbuilder.registerField("address",{repeatable:!0,view:"<div class='input-line'>\n  <span class='street'>\n    <input type='text' />\n    <label>Address</label>\n  </span>\n</div>\n\n<div class='input-line'>\n  <span class='city'>\n    <input type='text' />\n    <label>City</label>\n  </span>\n\n  <span class='state'>\n    <input type='text' />\n    <label>State / Province / Region</label>\n  </span>\n</div>\n\n<div class='input-line'>\n  <span class='zip'>\n    <input type='text' />\n    <label>Zipcode</label>\n  </span>\n\n  <span class='country'>\n    <select><option>United States</option></select>\n    <label>Country</label>\n  </span>\n</div>",edit:"",addButton:'<span class="symbol"><span class="icon-home"></span></span> Address'})}.call(this),function(){Formbuilder.registerField("autodate",{icon:"icon-calendar",repeatable:!0,valueField:!1,view:"<% if (rf.get(Formbuilder.options.mappings.DATETIME_UNIT)===\"date\"){ %>\n  <input disabled value=\"YYYY-MM-DD\">\n  <span class='icon icon-calendar'></span>\n<% } else if (rf.get(Formbuilder.options.mappings.DATETIME_UNIT)===\"time\"){ %>\n  <input disabled value=\"HH:MM\">\n  <span class='icon icon-time'></span>\n<% }else{ %>\n  <input disabled value=\"<%= rf.get(Formbuilder.options.mappings.DATETIME_FORMAT) || 'YYYY-MM-DD HH:mm:ss' %>\">\n  <span class='icon icon-calendar'></span><span class='icon icon-time'></span>\n\n<% } %>",edit:'        <div class=\'fb-edit-section-header\'>Date Stamp Options</div>\n        <div class="inline-labels">\n          <label>Field type:</label>\n          <select class="datetype" data-rv-value="model.<%= Formbuilder.options.mappings.DATETIME_UNIT %>">\n            <option value="datetime">Date &amp; Time</option>\n            <option value="time">Time Only</option>\n            <option value="date">Date Only</option>\n          </select>\n<div class="dateformat">\n          <label>Format:</label>\n          <input type="text" data-rv-value="model.<%= Formbuilder.options.mappings.DATETIME_FORMAT %>"/>\n<div>\n        </div>',addButton:"<span class='symbol'><span class='icon-calendar'></span></span> Datestamp",defaultAttributes:function(a){return a[Formbuilder.options.mappings.DATETIME_UNIT]="datetime",a[Formbuilder.options.mappings.DATETIME_FORMAT]="YYYY-MM-DD HH:mm:ss",a}})}.call(this),function(){Formbuilder.registerField("barcode",{icon:"icon-barcode",repeatable:!0,valueField:!1,view:"<label>Value: </label><input type='number' data-cid='<%= rf.cid %>' data-_id='<%= rf.get('_id') %>'  /><br/>\n<label>Format: </label><input type='number' data-cid='<%= rf.cid %>' data-_id='<%= rf.get('_id') %>' />",edit:"",addButton:"<span class='symbol'><span class='icon-barcode'></span></span> Barcode",defaultAttributes:function(a){return a}})}.call(this),function(){Formbuilder.registerField("checkbox",{repeatable:!0,icon:"icon-check",valueField:!1,view:"<input type='checkbox' <%= rf.get(Formbuilder.options.mappings.SINGLE_CHECKED) && 'checked' %> onclick=\"javascript: return false;\" />",edit:"<div class='fb-edit-section-header'>Checked</div>\n<input type='checkbox' <%= rf.get(Formbuilder.options.mappings.SINGLE_CHECKED) && 'checked' %> data-rv-checked='model.<%= Formbuilder.options.mappings.SINGLE_CHECKED%>' />",addButton:'<span class="symbol"><span class="icon-check"></span></span> Checkbox',defaultAttributes:function(a){return a=new Backbone.Model(a),a.set(Formbuilder.options.mappings.SINGLE_CHECKED,!0),a.set(Formbuilder.options.mappings.FIELD_TYPE,"checkbox"),a.toJSON()}})}.call(this),function(){Formbuilder.registerField("checkboxes",{repeatable:!1,valueField:!1,icon:"icon-check",view:"<% for (i in (rf.get(Formbuilder.options.mappings.OPTIONS) || [])) { %>\n  <div>\n    <label class='fb-option'>\n      <input type='checkbox' <%= rf.get(Formbuilder.options.mappings.OPTIONS)[i].checked && 'checked' %> onclick=\"javascript: return false;\" />\n      <%= rf.get(Formbuilder.options.mappings.OPTIONS)[i].label %>\n    </label>\n  </div>\n<% } %>\n\n<% if (rf.get(Formbuilder.options.mappings.INCLUDE_OTHER)) { %>\n  <div class='other-option'>\n    <label class='fb-option'>\n      <input type='checkbox' />\n      Other\n    </label>\n\n    <input type='text' />\n  </div>\n<% } %>",edit:"<%= Formbuilder.templates['edit/min_max_options']({ rf : rf }) %>\n<%= Formbuilder.templates['edit/options']({includeDatasource: true, rf: rf}) %>",addButton:'<span class="symbol"><span class="icon-check"></span></span> Checkboxes',defaultAttributes:function(a){return a=new Backbone.Model(a),a.set(Formbuilder.options.mappings.FIELD_TYPE,"checkboxes"),a.set(Formbuilder.options.mappings.MIN,1),a.set(Formbuilder.options.mappings.OPTIONS,[{label:"Option 1",checked:!1},{label:"Option 2",checked:!1}]),a.toJSON()}})}.call(this),function(){Formbuilder.registerField("date",{repeatable:!0,view:"<div class='input-line'>\n  <span class='month'>\n    <input type=\"text\" />\n    <label>MM</label>\n  </span>\n\n  <span class='above-line'>/</span>\n\n  <span class='day'>\n    <input type=\"text\" />\n    <label>DD</label>\n  </span>\n\n  <span class='above-line'>/</span>\n\n  <span class='year'>\n    <input type=\"text\" />\n    <label>YYYY</label>\n  </span>\n</div>",edit:"",addButton:'<span class="symbol"><span class="icon-calendar"></span></span> Date'})}.call(this),function(){Formbuilder.registerField("dropdown",{repeatable:!0,valueField:!1,icon:"icon-caret-down",view:"<select>\n  <% if (rf.get(Formbuilder.options.mappings.INCLUDE_BLANK)) { %>\n    <option value=''></option>\n  <% } %>\n\n  <% for (i in (rf.get(Formbuilder.options.mappings.OPTIONS) || [])) { %>\n    <option <%= rf.get(Formbuilder.options.mappings.OPTIONS)[i].checked && 'selected' %>>\n      <%= rf.get(Formbuilder.options.mappings.OPTIONS)[i].label %>\n    </option>\n  <% } %>\n</select>",edit:"<%= Formbuilder.templates['edit/options']({ includeBlank: true, includeDatasource: true, rf: rf}) %>",addButton:'<span class="symbol"><span class="icon-caret-down"></span></span> Dropdown',defaultAttributes:function(a){return a=new Backbone.Model(a),a.set(Formbuilder.options.mappings.FIELD_TYPE,"dropdown"),a.set(Formbuilder.options.mappings.OPTIONS,[{label:"Option 1",checked:!1},{label:"Option 2",checked:!1}]),a.set(Formbuilder.options.mappings.INCLUDE_BLANK,!1),a.toJSON()}})}.call(this),function(){Formbuilder.registerField("email",{repeatable:!0,icon:"icon-envelope-alt",view:"<input type='text' data-cid='<%= rf.cid %>' data-_id='<%= rf.get('_id') %>'  value='<%= rf.get(Formbuilder.options.mappings.VALUE) %>' placeholder=\"email@example.com\" class='rf-size-<%= rf.get(Formbuilder.options.mappings.SIZE) %>' />",edit:"",addButton:'<span class="symbol"><span class="icon-envelope-alt"></span></span> Email'})}.call(this),function(){Formbuilder.registerField("list",{icon:"icon-list",type:"non_input",view:'<div class="btn-group pull-right">\n<a data-name="<%= rf.get(Formbuilder.options.mappings.LABEL) %>" class="btn btn-small btn-listfield-data" href="#"><i class="icon-pencil"></i> Edit Data</a>\n<a data-name="<%= rf.get(Formbuilder.options.mappings.LABEL) %>" class="btn btn-small btn-listfield-structure" href="#"><i class="icon-road"></i> Edit Structure</i></a>\n</div>\n<label class=\'section-name\'><%= rf.get(Formbuilder.options.mappings.LABEL) %></label>\n<br />\n<br />\n<div class="fieldlist_table" data-name="<%= rf.get(Formbuilder.options.mappings.LABEL) %>">\n<p class="instructions"><i class="icon-info-sign"></i>Empty list - to add contents: </p><br />\n&nbsp; &nbsp;  1) Use "Edit Structure" to add fields to the list <br />\n&nbsp;  &nbsp;  2) Use "Edit Data" to add rows\n</div>',edit:'<div class="btn-group">\n<a data-name="<%= rf.get(Formbuilder.options.mappings.LABEL) %>" class="btn btn-listfield-data" href="#"><i class="icon-pencil"></i> Edit Data</a>\n<a data-name="<%= rf.get(Formbuilder.options.mappings.LABEL) %>" class="btn btn-listfield-structure" href="#"><i class="icon-road"></i> Edit Structure</i></a>\n</div>\n\n<div class=\'fb-edit-section-header\'>List Name</div>\n<input type=\'text\' data-rv-input=\'model.<%= Formbuilder.options.mappings.LABEL %>\' />\n',addButton:"<span class='symbol'><span class='icon-list'></span></span> Field List"})}.call(this),function(){Formbuilder.registerField("file",{repeatable:!0,icon:"icon-cloud-upload",valueField:!1,view:"<div class=\"file_container\" data-name=\"<%= rf.get(Formbuilder.options.mappings.LABEL) %>\"></div>\n<input type='file' name=\"<%= rf.get(Formbuilder.options.mappings.LABEL) %>\" data-name=\"<%= rf.get(Formbuilder.options.mappings.LABEL) %>\" data-cid='<%= rf.cid %>' data-_id='<%= rf.get('_id') %>'  />",edit:'<div class=\'fb-edit-section-header\'>File Settings</div>\nMax. File Size\n<input type="text" data-rv-input="model.<%= Formbuilder.options.mappings.FILE_SIZE %> | number" style="width: 60px" /> KB',addButton:'<span class="symbol"><span class="icon-cloud-upload"></span></span> File'})}.call(this),function(){Formbuilder.registerField("location",{repeatable:!0,valueField:!1,icon:"icon-location-arrow",view:"<% if (rf.get(Formbuilder.options.mappings.LOCATION_UNIT)===\"latlong\"){ %>\nLatitude/Longitude\n<% } else { %>\nEastings/Northings\n<% } %>\n<br />\n<input disabled class='rf-size-small' type='text' data-cid='<%= rf.cid %>' data-_id='<%= rf.get('_id') %>' />\n<input disabled class='rf-size-small' type='text' data-cid='<%= rf.cid %>' data-_id='<%= rf.get('_id') %>' />",edit:'<div class=\'fb-edit-section-header\'>Location Unit</div>\n<select data-rv-value="model.<%= Formbuilder.options.mappings.LOCATION_UNIT %>" style="width: auto;">\n  <option value="latlong">Latitude / Longitude</option>\n  <option value="eastnorth">Eastings / Northings</option>\n</select>',addButton:"<span class='symbol'><span class='icon-location-arrow'></span></span> Location",defaultAttributes:function(a){return a[Formbuilder.options.mappings.LOCATION_UNIT]="latlong",a}})}.call(this),function(){Formbuilder.registerField("map",{repeatable:!0,valueField:!1,icon:"icon-map-marker",view:"<h1><span class='icon-map-marker'></span></h1>",edit:"",addButton:"<span class='symbol'><span class='icon-map-marker'></span></span> Map",defaultAttributes:function(a){return a}})}.call(this),function(){Formbuilder.registerField("number",{repeatable:!0,icon:"icon-number",iconText:"123",view:"<input type='number' data-cid='<%= rf.cid %>' data-_id='<%= rf.get('_id') %>'  value='<%= rf.get(Formbuilder.options.mappings.VALUE) %>' />\n<% if (units = rf.get(Formbuilder.options.mappings.UNITS)) { %>\n  <%= units %>\n<% } %>",edit:"<%= Formbuilder.templates['edit/min_max']() %>\n<%= Formbuilder.templates['edit/units']() %>\n<%= Formbuilder.templates['edit/integer_only']() %>",addButton:'<span class="symbol"><span class="icon-number">123</span></span> Number'})}.call(this),function(){Formbuilder.registerField("page_break",{icon:"icon-file",type:"non_input",view:"<label class='section-name'>&nbsp; <%= rf.get(Formbuilder.options.mappings.LABEL) %></label>\n<p><%= rf.get(Formbuilder.options.mappings.DESCRIPTION) %></p>\n<hr style=\"border-bottom: 2px solid #bbb\">",edit:"<div class='fb-edit-section-header'>Label</div>\n<input type='text' data-rv-input='model.<%= Formbuilder.options.mappings.LABEL %>' />\n<textarea data-rv-input='model.<%= Formbuilder.options.mappings.DESCRIPTION %>'\nplaceholder='Add a longer description to this field'></textarea>",addButton:"<span class='symbol'><span class='icon-file'></span></span> Page Break"})}.call(this),function(){Formbuilder.registerField("paragraph",{icon:"icon-align-justify",repeatable:!0,view:"<textarea class='rf-size-<%= rf.get(Formbuilder.options.mappings.SIZE) %>' data-cid='<%= rf.cid %>' data-_id='<%= rf.get('_id') %>' ><%= rf.get(Formbuilder.options.mappings.VALUE) %></textarea>",edit:"<%= Formbuilder.templates['edit/size']() %>\n<%= Formbuilder.templates['edit/min_max_length']() %>",addButton:'<span class="icon icon-align-justify"></span> Paragraph',defaultAttributes:function(a){return a}})}.call(this),function(){Formbuilder.registerField("photo",{icon:"icon-camera",repeatable:!0,valueField:!1,view:"<h1><span class='icon-camera'></span></h1>",edit:'<div class=\'fb-edit-section-header\'>Photo Settings</div>\n<div class="inline-labels">\n<label>Max Height</label>\n<input type="text" data-rv-input="model.<%= Formbuilder.options.mappings.PHOTO_HEIGHT %> | number" style="width: 60px" /> px<br />\n<label>Max Width</label>\n<input type="text" data-rv-input="model.<%= Formbuilder.options.mappings.PHOTO_WIDTH %> | number" style="width: 60px" /> px<br />\n<label>Quality</label>\n<input type="text" data-rv-input="model.<%= Formbuilder.options.mappings.PHOTO_QUALITY %> | number" style="width: 60px" /> %<br />\n<label>Photo Source</label>\n<select data-rv-value="model.<%= Formbuilder.options.mappings.PHOTO_SOURCE %>" style="width: auto;">\n<option value="both">Camera &amp; Library</option>\n<option value="camera">Camera Only</option>\n<option value="library">Library Only</option>\n</select> <br />\n<label>Photo Type</label>\n<select data-rv-value="model.<%= Formbuilder.options.mappings.PHOTO_TYPE %>" style="width: auto;">\n<option value="jpeg">JPEG</option>\n<option value="png">PNG</option>\n</select> <br />\n<label>Save To Photo Album?</label>\n<select data-rv-value="model.<%= Formbuilder.options.mappings.PHOTO_SAVE %>" style="width: auto;">\n<option value="true">Yes</option>\n<option value="false">No</option>\n</select>\n</div>',
addButton:"<span class='symbol'><span class='icon-camera'></span></span> Photo Capture",defaultAttributes:function(a){return a=new Backbone.Model(a),a.set(Formbuilder.options.mappings.PHOTO_SOURCE,"both"),a.set(Formbuilder.options.mappings.PHOTO_TYPE,"jpeg"),a.set(Formbuilder.options.mappings.PHOTO_SAVE,"true"),a.toJSON()}})}.call(this),function(){Formbuilder.registerField("price",{repeatable:!0,view:"<div class='input-line'>\n  <span class='above-line'>$</span>\n  <span class='dolars'>\n    <input type='text' />\n    <label>Dollars</label>\n  </span>\n  <span class='above-line'>.</span>\n  <span class='cents'>\n    <input type='text' />\n    <label>Cents</label>\n  </span>\n</div>",edit:"",addButton:'<span class="symbol"><span class="icon-dollar"></span></span> Price'})}.call(this),function(){Formbuilder.registerField("radio",{icon:"icon-circle-blank",repeatable:!0,valueField:!1,view:"<% for (i in (rf.get(Formbuilder.options.mappings.OPTIONS) || [])) { %>\n  <div>\n    <label class='fb-option'>\n      <input type='radio' <%= rf.get(Formbuilder.options.mappings.OPTIONS)[i].checked && 'checked' %> onclick=\"javascript: return false;\" />\n      <%= rf.get(Formbuilder.options.mappings.OPTIONS)[i].label %>\n    </label>\n  </div>\n<% } %>\n\n<% if (rf.get(Formbuilder.options.mappings.INCLUDE_OTHER)) { %>\n  <div class='other-option'>\n    <label class='fb-option'>\n      <input type='radio' />\n      Other\n    </label>\n\n    <input type='text' />\n  </div>\n<% } %>",edit:"<%= Formbuilder.templates['edit/options']({includeDatasource: true, rf: rf}) %>",addButton:'<span class="symbol"><span class="icon-circle-blank"></span></span> Radio Buttons',defaultAttributes:function(a){return a=new Backbone.Model(a),a.set(Formbuilder.options.mappings.FIELD_TYPE,"radio"),a.set(Formbuilder.options.mappings.OPTIONS,[{label:"Option 1",checked:!1},{label:"Option 2",checked:!1}]),a.toJSON()}})}.call(this),function(){Formbuilder.registerField("readOnly",{repeatable:!1,type:"non_input",icon:"icon-comment",view:"<label class='section-name'>&nbsp; <%= rf.get(Formbuilder.options.mappings.LABEL) %></label>\n  <% for (i in (rf.get(Formbuilder.options.mappings.OPTIONS) || [])) { %>\n    <div>\n      <label class='fb-option'>\n        <%= rf.get(Formbuilder.options.mappings.OPTIONS)[i].label %>\n      </label>\n    </div>\n    <br/>\n  <% } %>\n\n  <% if (rf.get(Formbuilder.options.mappings.INCLUDE_OTHER)) { %>\n    <div class='other-option'>\n      <input type='text' />\n    </div>\n  <% } %>",edit:"<div class='fb-edit-section-header'>Label</div>\n<input type='text' data-rv-input='model.<%= Formbuilder.options.mappings.LABEL %>' />\n  <%= Formbuilder.templates['edit/readonly']({includeDatasource: true, rf: rf}) %>",addButton:'<span class="symbol"><span class="icon-comment"></span></span> Read Only',defaultAttributes:function(a){return a=new Backbone.Model(a),a.set(Formbuilder.options.mappings.FIELD_TYPE,"readOnly"),a.set(Formbuilder.options.mappings.REQUIRED,!1),a.set(Formbuilder.options.mappings.OPTIONS,[{label:"Read Only Text Paragraph"}]),a.toJSON()}})}.call(this),function(){Formbuilder.registerField("section_break",{type:"non_input",icon:"icon-minus",repeatable:!0,view:"<label class='section-name'><%= rf.get(Formbuilder.options.mappings.LABEL) %></label>\n<p><%= rf.get(Formbuilder.options.mappings.DESCRIPTION) %></p>\n<hr style=\"border-bottom: 2px dashed #bbb\">",edit:"<div class='fb-edit-section-header'>Label</div>\n<input type='text' data-rv-input='model.<%= Formbuilder.options.mappings.LABEL %>' />\n<textarea data-rv-input='model.<%= Formbuilder.options.mappings.DESCRIPTION %>'\n  placeholder='Add a longer description to this field'></textarea>\n<%= Formbuilder.templates['edit/repeating']({rf: rf}) %>",addButton:"<span class='symbol'><span class='icon-minus'></span></span> Section Break",defaultAttributes:function(a){return a}})}.call(this),function(){Formbuilder.registerField("signature",{repeatable:!0,valueField:!1,icon:"icon-pencil",view:"<h1 style=\"border: 1px solid #bbb; padding: 10px; border-radius: 6px;\"><span class='icon-pencil'></span></h1>",edit:"",addButton:"<span class='symbol'><span class='icon-pencil'></span></span> Signature Capture",defaultAttributes:function(a){return a}})}.call(this),function(){Formbuilder.registerField("sliderNumber",{repeatable:!0,icon:"icon-number",iconText:"123",view:"<h1 style=\"border: 1px solid #bbb; padding: 10px; border-radius: 6px;\"><span class='icon-exchange'></span></h1>",edit:"<%= Formbuilder.templates['edit/min_max_step']() %>",addButton:'<span class="symbol"><span class="icon-number">123</span></span> Slider (Number)',defaultAttributes:function(a){return a=new Backbone.Model(a),a.set(Formbuilder.options.mappings.MIN,1),a.set(Formbuilder.options.mappings.MAX,10),a.set(Formbuilder.options.mappings.STEP_SIZE,1),a.toJSON()}})}.call(this),function(){Formbuilder.registerField("text",{icon:"icon-font",repeatable:!0,view:"<% var size = rf.get(Formbuilder.options.mappings.SIZE) || 'large'; %>\n<input type='text' data-cid='<%= rf.cid %>' data-_id='<%= rf.get('_id') %>'  value='<%= rf.get(Formbuilder.options.mappings.VALUE) %>' class='rf-size-<%= size %>' />",edit:'<%= Formbuilder.templates[\'edit/size\']() %>\n<%= Formbuilder.templates[\'edit/min_max_length\']() %>\n<div class=\'fb-edit-section-header\'>Field Format</div>\n<div class="inline-labels">\n\n<label>Type</label>\n<select data-rv-value="model.<%= Formbuilder.options.mappings.FIELD_FORMAT_MODE %>" class="fieldFormatMode" style="width: auto;">\n  <option value="simple">Simple</option>\n  <option value="regex">Advanced (Regex)</option>\n</select><br />\n<label>Format</label>\n<input type="text" data-rv-input="model.<%= Formbuilder.options.mappings.FIELD_FORMAT_STRING %>" class="fieldFormatString" style="width: 150px;" /><br />\n</div>\n<div class="simpleFormat">\n  <strong>c</strong> = alphanumeric character<br />\n  <strong>n</strong> = number<br />\n  <strong>e.g.</strong> ccnn-nnnn matches ab12-5432, but not 0000-0000\n</div>\n<div class="advancedFormat">\nUse javascript-friendly regular expressions to validate - no need to include surrounding / characters <br />\n<strong>e.g.</strong> .+ but not /.+/\n\n</div>\n',addButton:"<span class='symbol'><span class='icon-font'></span></span> Text",defaultAttributes:function(a){return a}})}.call(this),function(){Formbuilder.registerField("time",{repeatable:!0,view:"<div class='input-line'>\n  <span class='hours'>\n    <input type=\"text\" />\n    <label>HH</label>\n  </span>\n\n  <span class='above-line'>:</span>\n\n  <span class='minutes'>\n    <input type=\"text\" />\n    <label>MM</label>\n  </span>\n\n  <span class='above-line'>:</span>\n\n  <span class='seconds'>\n    <input type=\"text\" />\n    <label>SS</label>\n  </span>\n\n  <span class='am_pm'>\n    <select>\n      <option>AM</option>\n      <option>PM</option>\n    </select>\n  </span>\n</div>",edit:"",addButton:'<span class="symbol"><span class="icon-time"></span></span> Time'})}.call(this),function(){Formbuilder.registerField("website",{repeatable:!0,icon:"icon-link",view:"<input type='text' class='rf-size-<%= rf.get(Formbuilder.options.mappings.SIZE) %>' placeholder='http://' />",edit:"",addButton:'<span class="symbol"><span class="icon-link"></span></span> Website'})}.call(this),this.Formbuilder=this.Formbuilder||{},this.Formbuilder.templates=this.Formbuilder.templates||{},this.Formbuilder.templates["edit/base"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj)__p+=(null==(__t=Formbuilder.templates["edit/base_header"]())?"":__t)+'\n<div class="well">\n  '+(null==(__t=Formbuilder.templates["edit/common"]({rf:rf,editStructure:editStructure,commonCheckboxes:commonCheckboxes,repeatable:repeatable,repeating:repeating}))?"":__t)+"\n</div>\n",Formbuilder.fields[rf.get(Formbuilder.options.mappings.FIELD_TYPE)].edit({rf:rf})&&(__p+='\n  <div class="well">\n    '+(null==(__t=Formbuilder.fields[rf.get(Formbuilder.options.mappings.FIELD_TYPE)].edit({rf:rf}))?"":__t)+"\n  </div>\n"),__p+="\n\n";return __p},this.Formbuilder.templates["edit/base_header"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+="<div class='fb-field-label'>\n  <span data-rv-text=\"model."+(null==(__t=Formbuilder.options.mappings.LABEL)?"":__t)+'"></span>\n</div>';return __p},this.Formbuilder.templates["edit/base_non_input"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+=(null==(__t=Formbuilder.templates["edit/base_header"]())?"":__t)+"\n"+(null==(__t=Formbuilder.fields[rf.get(Formbuilder.options.mappings.FIELD_TYPE)].edit({rf:rf}))?"":__t)+"\n";return __p},this.Formbuilder.templates["edit/checkboxes"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj){if(__p+="<label class=\"fb-required\">\n  <input type='checkbox' data-rv-checked='model."+(null==(__t=Formbuilder.options.mappings.REQUIRED)?"":__t)+"' />\n  Required\n</label>\n<label class=\"fb-immediately\">\n  <input type='checkbox' data-rv-checked='model."+(null==(__t=Formbuilder.options.mappings.VALIDATE_IMMEDIATELY)?"":__t)+"' />\n  Validate Immediately\n</label>\n<label class=\"fb-admin_only\">\n    <input type='checkbox' data-rv-checked='model."+(null==(__t=Formbuilder.options.mappings.ADMIN_ONLY)?"":__t)+"' />\n    Admin only (Note: Admin fields will not appear in the client app.)\n</label>\n",repeatable){__p+="\n  <label class=\"fb-repeating\">\n    <input type='checkbox' data-rv-checked='model."+(null==(__t=Formbuilder.options.mappings.REPEATING)?"":__t)+'\' />\n    Repeating\n  </label>\n  <label class="fb-repititions">\n    Min\n    ';var disabled=repeating===!0?"":"disabled";__p+='\n    <input class="minReps" type="text" '+(null==(__t=disabled)?"":__t)+' data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MINREPITIONS)?"":__t)+' | number" style="width: 30px" />\n    Max\n    <input class="maxReps" type="text" '+(null==(__t=disabled)?"":__t)+' data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MAXREPITIONS)?"":__t)+' | number" style="width: 30px" />\n  </label>\n'}__p+="\n"}return __p},this.Formbuilder.templates["edit/common"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj)__p+="<div class='fb-common-wrapper'>\n  <div class='fb-label-description'>\n    "+(null==(__t=Formbuilder.templates["edit/label_description"]({rf:rf,editStructure:editStructure}))?"":__t)+"\n  </div>\n  ",commonCheckboxes&&(__p+="\n  <div class='fb-common-checkboxes'>\n    "+(null==(__t=Formbuilder.templates["edit/checkboxes"]({repeatable:repeatable,repeating:repeating}))?"":__t)+"\n  </div>\n  "),__p+="\n\n  <div class='fb-clear'></div>\n</div>\n";return __p},this.Formbuilder.templates["edit/integer_only"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+="<!--<div class='fb-edit-section-header'>Integer only</div>-->\n<!--<label>-->\n  <!--<input type='checkbox' data-rv-checked='model."+(null==(__t=Formbuilder.options.mappings.INTEGER_ONLY)?"":__t)+"' />-->\n  <!--Only accept integers-->\n<!--</label>-->\n";return __p},this.Formbuilder.templates["edit/label_description"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj)editStructure&&(__p+="\n  <div class='fb-edit-section-header'>Name</div>\n  <input type='text' data-rv-input='model."+(null==(__t=Formbuilder.options.mappings.LABEL)?"":__t)+"' />\n"),__p+="\n",Formbuilder.fields[rf.get(Formbuilder.options.mappings.FIELD_TYPE)].valueField!==!1&&(__p+="\n  <div class='fb-edit-section-header'>"+(null==(__t=Formbuilder.options.mappings.VALUE_HEADER)?"":__t)+"</div>\n  <input type='text' data-rv-input='model."+(null==(__t=Formbuilder.options.mappings.VALUE)?"":__t)+"' />\n"),__p+="\n<div class=\"fb-field-description\">\n  <div class='fb-edit-section-header'>"+(null==(__t=Formbuilder.options.mappings.DESCRIPTION_TITLE)?"":__t)+"</div>\n  <textarea data-rv-input='model."+(null==(__t=Formbuilder.options.mappings.DESCRIPTION)?"":__t)+"'\n    placeholder='"+(null==(__t=Formbuilder.options.mappings.DESCRIPTION_PLACEHOLDER)?"":__t)+"'></textarea>\n</div>\n<label class=\"fb-field-description\">\n    <div class='fb-edit-section-header'>Field Code</div>\n    <input type='text' data-rv-input='model."+(null==(__t=Formbuilder.options.mappings.FIELD_CODE)?"":__t)+"' />\n</label>";return __p},this.Formbuilder.templates["edit/min_max"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+='<div class=\'fb-edit-section-header\'>Minimum / Maximum</div>\n\nMin\n<input type="text" data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MIN)?"":__t)+' | number" style="width: 30px" />\n\n&nbsp;&nbsp;\n\nMax\n<input type="text" data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MAX)?"":__t)+' | number" style="width: 30px" />\n\n<select data-rv-value="model.'+(null==(__t=Formbuilder.options.mappings.LENGTH_UNITS)?"":__t)+'" style="width: auto;">\n  <option value="value">Value</option>\n</select>\n';return __p},this.Formbuilder.templates["edit/min_max_length"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+='<div class="fb-configure-length">\n  <div class=\'fb-edit-section-header\'>Length Limit</div>\n\n  Min\n  <input type="text" data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MIN)?"":__t)+' | number" style="width: 30px" />\n\n  &nbsp;&nbsp;\n\n  Max\n  <input type="text" data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MAX)?"":__t)+' | number" style="width: 30px" />\n\n  &nbsp;&nbsp;\n\n  <select data-rv-value="model.'+(null==(__t=Formbuilder.options.mappings.LENGTH_UNITS)?"":__t)+'" style="width: auto;">\n    <option value="characters">characters</option>\n  </select>\n</div>\n';return __p},this.Formbuilder.templates["edit/min_max_options"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj)rf.get(Formbuilder.options.mappings.REQUIRED)===!0&&(__p+='\n<div class="fb-configure-length">\n  <div class=\'fb-edit-section-header\'>Selected Options Limit</div>\n\n  Min\n  <input type="text" data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MIN)?"":__t)+' | number" style="width: 30px" />\n\n  &nbsp;&nbsp;\n\n  Max\n  <input type="text" data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MAX)?"":__t)+' | number" style="width: 30px" />\n</div>\n'),__p+="\n";return __p},this.Formbuilder.templates["edit/min_max_step"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+='<div class=\'fb-edit-section-header\'>Minimum / Maximum</div>\n\nMin\n<input type="text" data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MIN)?"":__t)+' | number" style="width: 30px" />\n\n&nbsp;&nbsp;\n\nMax\n<input type="text" data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MAX)?"":__t)+' | number" style="width: 30px" />\n\nStep Size\n<input type="text" data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.STEP_SIZE)?"":__t)+' | number" style="width: 30px" />';return __p},this.Formbuilder.templates["edit/options"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj){if(__p+="<div class='fb-edit-section-header'>Options</div>\n\n","undefined"!=typeof includeDatasource){__p+='\n  <label class="includeDataSource">\n    ';var checked="dataSource"===rf.get(Formbuilder.options.mappings.DATASOURCE_TYPE)?"checked":"";__p+="\n      <input type='checkbox' "+(null==(__t=checked)?"":__t)+" />\n      Use a Data Source to populate field options?\n  </label>\n\n ";var disabled="dataSource"===rf.get(Formbuilder.options.mappings.DATASOURCE_TYPE)?"":"disabled";__p+="\n  <div class='ds-dd'>\n    <select "+(null==(__t=disabled)?"":__t)+" class='ds-select'></select>\n  </div>\n\n  <div class='datasource-data-view'></div>\n"}__p+="\n\n","undefined"!=typeof includeBlank&&(__p+="\n  <label class=\"includeBlank\">\n    <input type='checkbox' data-rv-checked='model."+(null==(__t=Formbuilder.options.mappings.INCLUDE_BLANK)?"":__t)+"' />\n    Include blank\n  </label>\n"),__p+="\n\n";var isHidden="dataSource"===rf.get(Formbuilder.options.mappings.DATASOURCE_TYPE)?"hidden":"";__p+="\n<div class='option-wrapper "+(null==(__t=isHidden)?"":__t)+"'>\n  <div class='option' data-rv-each-option='model."+(null==(__t=Formbuilder.options.mappings.OPTIONS)?"":__t)+"'>\n    ","undefined"==typeof noCheckboxes&&(__p+='\n      <input type="checkbox" class=\'js-default-updated\' data-rv-checked="option:checked" />\n    '),__p+='\n    <input type="text" data-rv-input="option:label" class=\'option-label-input\' />\n    <div class="btn-group">\n      <a class="btn btn-success btn-small js-add-option" title="Add Option"><i class=\'icon-plus-sign\'></i></a>\n      <a class="btn btn-danger btn-small js-remove-option" title="Remove Option"><i class=\'icon-minus-sign\'></i></a>\n    </div>\n  </div>\n\n  ',"undefined"!=typeof includeOther&&(__p+="\n    <label class=\"includeOther\">\n      <input type='checkbox' data-rv-checked='model."+(null==(__t=Formbuilder.options.mappings.INCLUDE_OTHER)?"":__t)+'\' />\n      Include "other"\n    </label>\n  '),__p+="\n  <div class='fb-bottom-add'>\n    <a class=\"js-add-option "+(null==(__t=Formbuilder.options.BUTTON_CLASS)?"":__t)+'">Add option</a>\n  </div>\n</div>\n'}return __p},this.Formbuilder.templates["edit/readonly"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj){__p+="<div class='fb-edit-section-header'>Options</div>\n\n<label class=\"includeDataSource\">\n  ";var checked="dataSource"===rf.get(Formbuilder.options.mappings.DATASOURCE_TYPE)?"checked":"";__p+="\n    <input type='checkbox' "+(null==(__t=checked)?"":__t)+" />\n    Use a Data Source to populate field value?\n</label>\n\n";var disabled="dataSource"===rf.get(Formbuilder.options.mappings.DATASOURCE_TYPE)?"":"disabled";__p+="\n<div class='ds-dd'>\n  <select "+(null==(__t=disabled)?"":__t)+" class='ds-select'></select>\n</div>\n\n<div class='datasource-data-view'></div>\n\n";var isHidden="dataSource"===rf.get(Formbuilder.options.mappings.DATASOURCE_TYPE)?"hidden":"";__p+="\n<div class='option-wrapper "+(null==(__t=isHidden)?"":__t)+"'>\n  <div class='option' data-rv-each-option='model."+(null==(__t=Formbuilder.options.mappings.OPTIONS)?"":__t)+'\'>\n    <textarea type="text" data-rv-input="option:label" class=\'option-label-input\' /></textarea>\n  </div>\n</div>\n'}return __p},this.Formbuilder.templates["edit/repeating"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj){__p+=" <label class=\"fb-repeating\">\n    <input type='checkbox' data-rv-checked='model."+(null==(__t=Formbuilder.options.mappings.REPEATING)?"":__t)+'\' />\n    Repeating\n  </label>\n  <label class="fb-repititions">\n    Min\n    ';var disabled=rf.get("repeating")===!0?"":"disabled";__p+='\n    <input class="minReps" type="text" '+(null==(__t=disabled)?"":__t)+' data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MINREPITIONS)?"":__t)+' | number" style="width: 30px" />\n    Max\n    <input class="maxReps" type="text" '+(null==(__t=disabled)?"":__t)+' data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.MAXREPITIONS)?"":__t)+' | number" style="width: 30px" />\n  </label>\n'}return __p},this.Formbuilder.templates["edit/size"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+="<!--<div class='fb-edit-section-header'>Size</div>-->\n<!--<select data-rv-value=\"model."+(null==(__t=Formbuilder.options.mappings.SIZE)?"":__t)+'">-->\n  <!--<option value="small">Small</option>-->\n  <!--<option value="medium">Medium</option>-->\n  <!--<option value="large">Large</option>-->\n<!--</select>-->\n';return __p},this.Formbuilder.templates["edit/units"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+='<!--<div class=\'fb-edit-section-header\'>Units</div>\n<input type="text" data-rv-input="model.'+(null==(__t=Formbuilder.options.mappings.UNITS)?"":__t)+'" />\n-->';return __p},this.Formbuilder.templates.page=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+=(null==(__t=Formbuilder.templates["partials/save_button"]())?"":__t)+"\n"+(null==(__t=Formbuilder.templates["partials/left_side"]({editStructure:editStructure}))?"":__t)+"\n"+(null==(__t=Formbuilder.templates["partials/right_side"]({editStructure:editStructure,fieldsEnabled:fieldsEnabled,fieldsEnabledNonInput:fieldsEnabledNonInput}))?"":__t)+"\n<div class='fb-clear'></div>";return __p},this.Formbuilder.templates["partials/add_field"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj){__p+="<div class='fb-tab-pane active' id='addField'>\n  <div class='fb-add-field-types'>\n    <div class='section'>\n      ";for(i in fieldsEnabled)__p+='\n        <a data-field-type="'+(null==(__t=i)?"":__t)+'" class="btn btn-primary btn-'+(null==(__t=i)?"":__t)+'">\n          '+(null==(__t=fieldsEnabled[i].addButton)?"":__t)+"\n        </a>\n      ";__p+="\n    </div>\n\n    <div class='section'>\n      ";for(i in fieldsEnabledNonInput)__p+='\n        <a data-field-type="'+(null==(__t=i)?"":__t)+'" class="btn btn-primary btn-'+(null==(__t=i)?"":__t)+'">\n          '+(null==(__t=fieldsEnabledNonInput[i].addButton)?"":__t)+"\n        </a>\n      ";__p+="\n    </div>\n  </div>\n</div>"}return __p},this.Formbuilder.templates["partials/ds_options"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj){__p+='<option value="prompt">Select a Data Source</option>\n';for(i in datasources){__p+="\n    ";var selected=datasources[i]._id==datasource?"selected":"";__p+='\n    <option value="'+(null==(__t=datasources[i]._id)?"":__t)+'" '+(null==(__t=selected)?"":__t)+">"+(null==(__t=datasources[i].name)?"":__t)+"</option>\n"}__p+="\n"}return __p},this.Formbuilder.templates["partials/edit_field"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="<div class='fb-tab-pane' id='editField'>\n  <div class='fb-edit-field-wrapper'></div>\n</div>\n";return __p},this.Formbuilder.templates["partials/left_side"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="<div class='span6 middle'>\n  <div class='fb-no-response-fields'>No response fields</div>\n  <div class='fb-response-fields'></div>\n</div>";return __p},this.Formbuilder.templates["partials/right_side"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj)__p+="<div class='span4 right'>\n  <ul class='fb-tabs nav nav-tabs compact '>\n    ",__p+=editStructure?"\n      <li class='active addfield'><a data-target='#addField'><i class=\"icon-plus\"></i> Field</a></li>\n      <li class=\"configurefield\"><a data-target='#editField'><i class=\"icon-cog\"></i> Field</a></li>\n    ":'\n      <li class="active configurefield"><a data-target=\'#editField\'><i class="icon-cog"></i> Field</a></li>\n    ',__p+="\n  </ul>\n\n  <div class='fb-tab-content'>\n    ",editStructure&&(__p+="\n      "+(null==(__t=Formbuilder.templates["partials/add_field"]({fieldsEnabledNonInput:fieldsEnabledNonInput,fieldsEnabled:fieldsEnabled}))?"":__t)+"\n    "),__p+="\n    "+(null==(__t=Formbuilder.templates["partials/edit_field"]())?"":__t)+"\n  </div>\n</div>";return __p},this.Formbuilder.templates["partials/save_button"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+="<div class='fb-save-wrapper'>\n  <button class='js-save-form "+(null==(__t=Formbuilder.options.BUTTON_CLASS)?"":__t)+"'></button>\n</div>";return __p},this.Formbuilder.templates["view/base"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj)__p+="<div class='subtemplate-wrapper'>\n  ",rf.get(Formbuilder.options.mappings.FIELD_ERROR)&&(__p+='\n    <p class="text-error">\n      '+(null==(__t=rf.get(Formbuilder.options.mappings.FIELD_ERROR))?"":__t)+"\n    </p>\n  "),__p+="\n  <div class='cover'></div>\n  ",editStructure&&(__p+="\n  "+(null==(__t=Formbuilder.templates["view/duplicate_remove"]({rf:rf}))?"":__t)+"\n  "),__p+='\n  <span class="icon icon-inline '+(null==(__t=Formbuilder.fields[rf.get(Formbuilder.options.mappings.FIELD_TYPE)].icon)?"":__t)+'">'+(null==(__t=Formbuilder.fields[rf.get(Formbuilder.options.mappings.FIELD_TYPE)].iconText)?"":__t)+"</span>\n  "+(null==(__t=Formbuilder.templates["view/label"]({rf:rf}))?"":__t)+"\n\n  "+(null==(__t=Formbuilder.templates["view/description"]({rf:rf}))?"":__t)+"\n\n  "+(null==(__t=Formbuilder.fields[rf.get(Formbuilder.options.mappings.FIELD_TYPE)].view({rf:rf}))?"":__t)+"  \n\n</div>\n";return __p},this.Formbuilder.templates["view/base_non_input"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+="<div class='subtemplate-wrapper'>\n  <div class='cover'></div>\n  "+(null==(__t=Formbuilder.templates["view/duplicate_remove"]({rf:rf}))?"":__t)+'\n  <span class="icon icon-inline '+(null==(__t=Formbuilder.fields[rf.get(Formbuilder.options.mappings.FIELD_TYPE)].icon)?"":__t)+'"></span>'+(null==(__t=Formbuilder.fields[rf.get(Formbuilder.options.mappings.FIELD_TYPE)].view({rf:rf}))?"":__t)+"\n</div>\n";return __p},this.Formbuilder.templates["view/description"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+="<span class='help-block'>\n  "+(null==(__t=Formbuilder.helpers.simple_format(rf.get(Formbuilder.options.mappings.DESCRIPTION)))?"":__t)+"\n</span>\n";return __p},this.Formbuilder.templates["view/duplicate_remove"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+='<div class=\'actions-wrapper btn-group\'>\n  <a class="js-duplicate btn btn-small btn-success" title="Duplicate Field"><i class=\'icon-plus-sign\'></i></a>\n  <a class="js-clear btn btn-small btn-danger" title="Remove Field"><i class=\'icon-minus-sign\'></i></a>\n</div>';return __p},this.Formbuilder.templates["view/label"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj)__p+='<label class="fb-field-title">\n  <span>'+(null==(__t=Formbuilder.helpers.simple_format(rf.get(Formbuilder.options.mappings.LABEL)))?"":__t)+"\n  ",rf.get(Formbuilder.options.mappings.REQUIRED)&&(__p+="\n    <abbr title='required'>*</abbr>\n  "),__p+="\n</label>\n";return __p};